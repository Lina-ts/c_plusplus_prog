#pragma once
#include <iostream>
#include "Mammal.h"

using namespace std;

class Human : public Mammal // класс Человек наследуется от класса Млекопитающее
{
// Уникальный элемент данных для Человека (в отличии от других Млекопитающих)
bool civilized;
public:
Human()
{
        cout << "Новый человек родился" << endl;
        speed = 2.0; // меняем скорость. Так как конструктор класса-потомка
                        // запускается после конструктора базового класса,
                        // устанавливаются специальные для этого класса
                        // переменные-члены
        civilized = true;
}
~Human()
{
        cout << "Человек ушёл в мир иной" << endl;
}
virtual void talk() //override
{
        cout << "Я хорошо выгляжу для... человека" << endl;
}
// осуществление ходьбы для человека..
virtual void walk() override
{
        cout << "Левой, правой, левой, правой со скоростью " << speed << endl;
}
// функция-член уникальна для производного человек
void attack( Human & other )
{
        // Человек не будет нападать, если он цивилизован
        if( civilized )
                cout << "Почему один человек должен нападать на другого? Я отказываюсь" << endl;
        else
                cout << "Человек нападает на другого!" << endl;
}
};
